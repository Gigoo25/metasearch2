name: Build & Deploy Image to GHCR

on:
    push:
        paths:
            - 'Containerfile'
            - 'Cargo.toml'
            - 'src/**'
    workflow_dispatch:

jobs:
    syntax-check:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout GitHub Action
              uses: actions/checkout@main

            - name: Validate Containerfile
              uses: ghe-actions/dockerfile-validator@master
              with:
                  dockerfile: './Containerfile'
                  lint: 'hadolint'
              if: success()

    rust-check:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout GitHub Action
              uses: actions/checkout@main

            - name: Setup Rust
              uses: dtolnay/rust-toolchain@stable

            - name: Run clippy
              run: cargo clippy -- -D warnings

            - name: Run tests
              run: cargo test

            - name: Check formatting
              run: cargo fmt --check

            - name: Check compilation
              run: cargo check

    build-and-push-image:
        runs-on: ubuntu-latest
        needs: [syntax-check, rust-check]
        if: needs.syntax-check.result == 'success'

        steps:
            - name: 'Checkout GitHub Action'
              uses: actions/checkout@main

            - name: Set lowercase repository name
              run: echo "REPO_LOWER=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

            - name: 'Login to GitHub Container Registry'
              uses: docker/login-action@v3
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Set up Docker Buildx
              id: buildx
              uses: docker/setup-buildx-action@master

            - name: Cache Docker layers
              uses: actions/cache@main
              with:
                  path: /tmp/.buildx-cache
                  key: ${{ runner.os }}-buildx-${{ github.sha }}
                  restore-keys: |
                      ${{ runner.os }}-buildx-
              if: success()

            - name: Extract version from Cargo.toml
              id: extract_version
              run: |
                  VERSION=$(grep '^version =' Cargo.toml | cut -d'"' -f2)
                  echo "VERSION=$VERSION" >> $GITHUB_ENV
                  echo "Using version: $VERSION for tagging"

            - name: Build and push
              id: docker_build_main
              uses: docker/build-push-action@master
              with:
                  context: ./
                  file: ./Containerfile
                  builder: ${{ steps.buildx.outputs.name }}
                  push: true
                  tags: |
                      ghcr.io/${{ env.REPO_LOWER }}/metasearch:v${{ env.VERSION }}
                      ghcr.io/${{ env.REPO_LOWER }}/metasearch:latest
                  cache-from: type=local,src=/tmp/.buildx-cache
                  cache-to: type=local,dest=/tmp/.buildx-cache
